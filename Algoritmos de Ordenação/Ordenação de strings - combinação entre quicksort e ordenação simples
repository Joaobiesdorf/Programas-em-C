#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int comparar_char(char c1, char c2){
    if (c1 == c2) return 0;
    else if (c1 < c2) return -1;
    else return 1;
}


int comparar(char s1[], char s2[]){
    int i;

    for (i = 0; (s1[i] == s2[i]) && (s1[i] != '\0') && (s2[i] != '\0'); i++);

    return comparar_char(s1[i], s2[i]);
}


void troca(char **vstr, int p1, int p2){
    char *str;

    str = vstr[p1];
    vstr[p1] = vstr[p2];
    vstr[p2] = str;
}


void quickB(char **vstr, int cima, int baixo,int c)
{
    int i = cima, j = baixo;
    char *pivo = vstr[(i + j) / 2];

    do
    {
        while ((comparar(vstr[i], pivo) < 0) )
            i++;

        while ((comparar(vstr[j], pivo) > 0) )
            j--;

        if (i <= j){
            troca(vstr, i, j);
            i++;
            j--;
        }
        
    }while (i <= j);
    
    if(baixo - cima > c)
    {
        if (j > cima){
            
            quickB(vstr, cima, j, c);
        }
        if (i < baixo){
            quickB(vstr, i, baixo, c);
        }
    }
    
    else{

        for (i = cima; (i <= baixo - 1) ; i++){

            for (j = cima; j <= baixo - i - 1; j++){
                
                if (comparar(vstr[j], vstr[j + 1]) > 0)
                {
                    troca(vstr, j, j + 1);
                }
                    
                }
        }
    }

}
int main() {
   int n, c, i;
   char **vec;
    
    scanf("%d", &n);
    scanf("%d", &c);
    
    vec = (char**) malloc(sizeof(char*)*n);
    
    for(i=0;i < n;i++){
        vec[i] = (char*) malloc(sizeof(char)*20);
        scanf("%s",vec[i]);
        }
    
    quickB(vec, 0, n-1, c);
    
        for (i = 0; i < n; i++){
        printf("%s\n", vec[i]);
    }
         
    free(vec);

    return 0;
}
