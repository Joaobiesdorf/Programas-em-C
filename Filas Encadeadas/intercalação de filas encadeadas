#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
//#include "filaE.h"
typedef struct Cell Cell;
struct Cell{
    int item; 
    Cell *next;
};

typedef struct FilaE FilaE;
struct FilaE{
    Cell *inicio;
    Cell *fim;
};


Cell* criar_celula(int key){
    Cell *c = (Cell*) malloc(sizeof(Cell));
    c->item = key;

    c->next = NULL;

    return c;
}

FilaE* criar_filaE(){
    FilaE *f = (FilaE*) malloc(sizeof(FilaE));
    
    f->inicio = NULL;
    f->fim = NULL;
    
    return f;
}

int filaE_vazia(FilaE* f){
    return (f == NULL) || (f->inicio == NULL);
}

void enfileirar(int key, FilaE* f){
    Cell *aux; 

    if (f == NULL)
        f = criar_filaE();

    aux = criar_celula(key);

    if (f->inicio == NULL)
        f->inicio = f->fim = aux;
    else{

        f->fim->next = aux;
        f->fim = f->fim->next;
    }

}


int desenfileirar(FilaE* f){
    Cell *aux;
    int item = INT_MIN; 

    if (!filaE_vazia(f)){

        aux = f->inicio;

        f->inicio = aux->next;

        item = aux->item;

        free(aux);
    }

    return item;
}

void imprimir_fila(FilaE* f){
    Cell *aux; 

    if (!filaE_vazia(f)){
        aux = f->inicio;

        while (aux != NULL){
            printf("%d ", aux->item);
            aux = aux->next;
        }
    }
}

int liberar_filaE(FilaE* f){
    if (!filaE_vazia(f)){
        while (f->inicio != NULL)
            desenfileirar(f);

        free(f);

        return 1;
    }

    return 0;
}

int interc(int z, int n, FilaE *f1, FilaE *f2, FilaE *f3){
    int i=0, x, y;
 if(z>=n){
     
          for(i=0; i<n; i++){
              x = desenfileirar(f1);
              y = desenfileirar(f2);
     
                  if(x<=y){
                     enfileirar(y, f3);                                  
                     enfileirar(x, f3);   
                     }
                  else if(x>y){
                     enfileirar(x, f3);
                     enfileirar(y, f3); 
                     }   
            x=0;
            y=0;
           }
        if(z>n){
            for(i=n; i<z; i++){
              y = desenfileirar(f2);
              enfileirar(y, f3);                                   
              y=0;
           }            
        }
      }
else if(z<n){
              for(i=0; i<z; i++){
              x = desenfileirar(f1);
              y = desenfileirar(f2);
     
                  if(x<=y){
                     enfileirar(y, f3);                                  
                     enfileirar(x, f3);   
                     }
                  else if(x>y){
                     enfileirar(x, f3);
                     enfileirar(y, f3); 
                     }   
            x=0;
            y=0;
           }
              for(i=z; i<n; i++){
              x = desenfileirar(f1);
              enfileirar(x, f3);                                   
              x=0;
           }     
}
    
         
    return 0;
}
int main() {
     int n=0, x=0, z;
    FilaE* f1 =  criar_filaE();
    FilaE* f2 =  criar_filaE();
    FilaE* f3 =  criar_filaE();
    
    do{
        scanf("%d", &z);
        if(z != -1){
        enfileirar(z, f1);
        n++;
        }
    }while(z != -1);
    
    do{
        scanf("%d", &z);
        if(z != -1){
        enfileirar(z, f2);
        x++;
        }
    }while(z != -1);

        interc(x, n, f1, f2, f3);


  
    imprimir_fila(f3);
    liberar_filaE(f1);
    liberar_filaE(f2);
    liberar_filaE(f3);
    return 0;
}
