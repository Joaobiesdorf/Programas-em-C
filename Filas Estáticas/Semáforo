#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <limits.h>
#define TAM_MAX 100

typedef struct{
    int item[TAM_MAX];
    int x; 
    int y; 
    int tam; 
}Linha;

// Criar uma fila vazia
Linha* criar_fila(){
    Linha *f = (Linha*) malloc(sizeof(Linha));

    f->x = -1;
    f->y = -1;
    f->tam = 0;

    return f;
}

int fila_cheia(Linha *f){

    if (f == NULL)
        return -1; 
    else if (f->tam < TAM_MAX)
        return 0; 
    else
        return 1; 
}

int fila_vazia(Linha *f){
    if (f == NULL)
        return -1; 
    else if (f->tam > 0)
        return 0; 
    else
        return 1; 
}

int enfileirar(Linha *f, int chave){
    
    if (f == NULL)
        f = criar_fila();

    if (!fila_cheia(f)){
        if (f->x < 0)
            f->x = 0;

        if (f->y < TAM_MAX - 1)
            f->y++;
        else
            f->y = 0;

        f->item[f->y] = chave;

 
        f->tam++;

        return 1; 
    }

    return 0; 
}

int desenfileirar(Linha *f){
    int item = INT_MIN;

    if (!fila_vazia(f)){
        item = f->item[f->x];
        f->tam--;
    

    if (f->tam == 0){
            f->x = -1;
            f->y = -1;
        }else if (f->x < TAM_MAX - 1)
            f->x++;
        else
            f->x = 0;
    }

    return item;
}
Linha * organizaTransito(Linha *Rua1,Linha *Rua2,Linha *Rua3,Linha *X){
    int i;
    
    X = criar_fila();
    
    while(!fila_vazia(Rua1)||!fila_vazia(Rua2) ||!fila_vazia(Rua3)){

        
 for(i = 0;(i < 3) && (!fila_vazia(Rua1));i++)
  {
             enfileirar(X,desenfileirar(Rua1));
        }
           
        
 for(i = 0;(i < 3) && (!fila_vazia(Rua2));i++)
     {
            enfileirar(X,desenfileirar(Rua2));
 }        
        
     for(i = 0;(i < 3) && (!fila_vazia(Rua3));i++)
        {
            enfileirar(X,desenfileirar(Rua3));
        }
            

    }
    
    return X;
}

void imprimir_fila(Linha *f){
  
    Linha aux = *f;
    int item;

 
    while (!fila_vazia(&aux)){
        item = desenfileirar(&aux);

        printf("%d ", item);
    }
    
    printf("\n");
}
void liberar_fila(Linha *f){
    if (f != NULL)
        free(f);
}



int main() {
     int i1, i2, i3;
    Linha *Rua1;
    Linha *Rua2;
    Linha *Rua3;
    Linha *X;
    Rua1 = criar_fila();
    Rua2 = criar_fila();
    Rua3 = criar_fila();
    X = criar_fila();
    
    while(i1 != -1){
    scanf("%d", &i1);
    if(i1 != -1)
    enfileirar(Rua1, i1);
    }
     while(i2 != -1){
    scanf("%d",&i2);
    if(i2 != -1)
    enfileirar(Rua2,i2);
    }
    
    while(i3 != -1){
      scanf("%d",&i3);
    if(i3 != -1)
     enfileirar(Rua3,i3);
    }
    
    X = organizaTransito(Rua1,Rua2,Rua3,X);
    imprimir_fila(X);
    
    
    
    liberar_fila(Rua1);
    liberar_fila(Rua2);
    liberar_fila(Rua3);
    liberar_fila(X);

    return 0;
}
